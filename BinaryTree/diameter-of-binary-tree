/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int daimeter=0;
    public int diameterOfBinaryTree(TreeNode root) {
        height(root);
        return daimeter -1;
    }
    int height(TreeNode node){
        if(node== null){
            return 0;
        }
        int leftHeight= height(node.left);
        int rightHeight= height(node.right);

        int dai= leftHeight+rightHeight+1;
        daimeter=Math.max(daimeter,dai);

        return Math.max(leftHeight,rightHeight)+1;
    }
}
