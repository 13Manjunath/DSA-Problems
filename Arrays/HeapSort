//Heap sorting algorithms

public class HeapSort {
    public void Heap(int arr[]) {
        int n = arr.length;
        for (int i = n / 2 - 1; i >= 0; i--) {
            heapfy(arr, n, i);
            for ( i=n-1;i>0;i--){
                int temp=arr[0];
                arr[0]=arr[i];
                arr[i]=temp;
                heapfy(arr,i,0);
            }
        }
    }

    void heapfy(int arr[], int n, int i) {
        int swap;
        int largest = i;
        int l = 2 * i + 1;
        int r = 2 * i + 2;
        if (l < n && arr[l] > arr[largest])
            largest = l;
        if (r < n && arr[r] > arr[largest])
            largest = r;
        if (largest != i) {
            swap = arr[i];
            arr[i] = arr[largest];
            arr[largest] = swap;
        }
    }
    static void print(int arr[]){
        int n=arr.length;
        for (int i=0;i<n;i++){
            System.out.println(arr[i]+" ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        int arr[]={10,4,7,3,9,12,6};
        int n=arr.length;
        HeapSort my=new HeapSort();
        my.Heap(arr);
        System.out.println("printed array is");
        print(arr);
    }
}
