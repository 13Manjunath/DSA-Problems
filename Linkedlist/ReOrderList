/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public void reorderList(ListNode head) {

      if(head == null || head.next == null){
        return;
      }  
      ListNode slow= head, fast=head;
      while(fast != null && fast.next != null){
            slow= slow.next;
            fast= fast.next.next;

      }
      //check for the second half

      ListNode second= slow.next;
      slow.next= null;
      ListNode prev= null;
    
    while(second != null){
        ListNode next=second.next;
        second.next=prev;
        prev= second;
        second= next;
    }
    ListNode first= head,secondl=prev;

    while(first != null && secondl != null){
        ListNode firstNxt= first.next;
        ListNode secondNxt=secondl.next;

        first.next= secondl;
        secondl.next=firstNxt;

        first= firstNxt;
        secondl=secondNxt;
    }
    }
}
